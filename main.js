!function(){"use strict";var e=class{constructor(e){let{data:t,cardSelector:s,handleCardClick:r}=e;this._title=t.title,this._link=t.link,this._cardSelector=s,this._handleCardClick=r}_getTemplate(){return this._cardSelector.cloneNode(!0).querySelector(".card")}_handleLikeButton=()=>{this._likeBtn.classList.toggle("card__like-button_active")};_handleDeleteButton=()=>{this._cardElement.remove(),this._cardElement=null};_setEventListeners(){this._cardImage.addEventListener("click",this._handleCardClick),this._likeBtn.addEventListener("click",this._handleLikeButton),this._deleteBtn.addEventListener("click",this._handleDeleteButton)}getView(){return this._cardElement=this._getTemplate(),this._cardTitle=this._cardElement.querySelector(".card__title"),this._cardImage=this._cardElement.querySelector(".card__image"),this._likeBtn=this._cardElement.querySelector(".card__like-button"),this._deleteBtn=this._cardElement.querySelector(".card__delete-button"),this._cardTitle.textContent=this._title,this._cardImage.alt=this._title,this._cardImage.src=this._link,this._setEventListeners(),this._cardElement}},t=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t}_showInputError(e,t){const s=this._formElement.querySelector(`.${e.id}-error`);e.classList.add(this._inputErrorClass),s.textContent=t,s.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`.${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.setAttribute("disabled",!0)):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.removeAttribute("disabled"))}resetValidation(){this._toggleButtonState(),this._inputList.forEach((e=>{this._hideInputError(e)}))}_setEventListeners(){this._inputList=[...this._formElement.querySelectorAll(this._inputSelector)],this._buttonElement=this._formElement.querySelector(this._submitButtonSelector),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._toggleButtonState(),this.checkInputValidity(e)}))}))}enableValidation(){this._setEventListeners()}},s=class{constructor(e){let{popup:t}=e;this._popup=t}open(){this._popup.classList.add("modal_opened"),document.addEventListener("keydown",this._handleCloseByEsc)}close(){this._popup.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleCloseByEsc)}_handleCloseByEsc=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popup.addEventListener("mousedown",(e=>{(e.target.classList.contains("modal")||e.target.classList.contains("modal__close-button"))&&this.close()}))}},r=class extends s{constructor(e,t){let{popup:s,handleFormSubmit:r}=e;super({popup:s}),this._popupForm=this._popup,this._handleFormSubmit=r,this._inputSelector=t.inputSelector,this._inputList=[...this._popupForm.querySelectorAll(this._inputSelector)]}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setInputValues(e){this._inputList.forEach((t=>{t.value=e[t.name]}))}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),e.target.reset()}))}};const i={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__save-button",inactiveButtonClass:"modal__save-button_inactive",inputErrorClass:"modal__input_type_error",errorClass:"modal__input-error_active"},n=new class{constructor(e){this.baseUrl=e.baseUrl,this.headers=e.headers}getUserInformation(){return fetch(`${this.baseUrl}/users/me`,{headers:this.headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}getInitialCards(){return fetch(`${this.baseUrl}/cards`,{headers:this.headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}editProfileData(e){return fetch(`${this.baseUrl}/users/me`,{method:"PATCH",headers:this.headers,body:JSON.stringify({name:e.name,about:e.job})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}addNewCard(e){return fetch(`${this.baseUrl}/cards`,{method:"POST",headers:this.headers,body:JSON.stringify({name:e.title,link:e.link})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}deleteCard(e){return fetch(`${this.baseUrl}/cards/${e}`,{method:"DELETE",headers:this.headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}addLike(e){return fetch(`${this.baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this.headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}deleteLike(e){return fetch(`${this.baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this.headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}updateProfileImage(e){return fetch(`${this.baseUrl}/users/me/avatar`,{method:"PATCH",headers:this.headers,body:JSON.stringify({avatar:e})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"9fbfab1b-69d6-43a9-b085-60d57b074309","Content-Type":"application/json"}}),o=document.querySelector(".profile__title"),a=document.querySelector(".profile__description"),l=document.querySelector(".profile__image"),c=document.querySelector(".gallery__cards"),u=document.querySelector("#card-template").content,d=document.getElementById("edit-modal"),h=document.getElementById("new-card-modal"),m=document.getElementById("avatar-edit-modal"),p=document.getElementById("preview-image-modal"),_=p.querySelector(".preview-image"),E=p.querySelector(".image-description"),g=document.querySelector(".profile__edit-button"),b=document.querySelector(".profile__plus-button"),v=document.querySelector(".edit__avatar-button"),f={},S=t=>{const s=(t=>new e({data:t,cardSelector:u,handleCardClick:()=>{y.open(t)}}).getView())(t);k.setItem(s)},L=new class{constructor(e){let{userName:t,userJob:s}=e;this._userName=t,this._userJob=s}getUserInfo(){const e={};return e.name=this._userName.textContent,e.job=this._userJob.textContent,e}setUserInfo(e){this._userName.textContent=e.name,this._userJob.textContent=e.job}}({userName:o,userJob:a}),k=new class{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=t}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}setItem(e){this._container.prepend(e)}}({items:[{title:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{title:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{title:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{title:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{title:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{title:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:S},c),y=new class extends s{constructor(e,t){let{popupImage:s,popupImageText:r}=e;super({popup:t}),this._popup=t,this._popupImage=s,this._popupImageText=r}open(e){super.open(),this._popupImage.src=e.link,this._popupImage.alt=e.title,this._popupImageText.textContent=e.title}}({popupImage:_,popupImageText:E},p),I=new r({popup:d,handleFormSubmit:e=>{L.setUserInfo(e),n.editProfileData(e),I.close()}},i),C=new r({popup:h,handleFormSubmit:e=>{S(e),n.addNewCard(e),C.close()}},i),w=new r({popup:m,handleFormSubmit:e=>{l.src=e,n.updateProfileImage(e),w.close()}},i);g.addEventListener("click",(()=>{const e=L.getUserInfo();I.setInputValues(e),f["edit-form"].resetValidation(),I.open()})),b.addEventListener("click",(()=>{f["new-card-form"].resetValidation(),C.open()})),v.addEventListener("click",(()=>{f["avatar-edit-form"].resetValidation(),w.open()})),y.setEventListeners(),I.setEventListeners(),C.setEventListeners(),w.setEventListeners(),(e=>{[...document.querySelectorAll(e.formSelector)].forEach((s=>{const r=new t(e,s),i=s.getAttribute("name");f[i]=r,r.enableValidation()}))})(i),k.renderItems()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,