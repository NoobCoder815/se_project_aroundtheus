!function(){"use strict";var e=class{constructor(e,t,s){let{name:r,link:i,_id:n,isLiked:o}=e,{handleCardClick:a,handleDeleteClick:l,handleLikeClick:c}=t;this._title=r,this._link=i,this._id=n,this._isLiked=o,this._cardTemplate=s,this._handleCardClick=a,this._handleDeleteClick=l,this._handleLikeClick=c}_getTemplate(){return this._cardTemplate.cloneNode(!0).querySelector(".card")}setLike(e){this._isLiked=e,this._renderLike()}_renderLike=()=>{this._likeBtn.classList.toggle("card__like-button_active")};removeCard=()=>{this._cardElement.remove(),this._cardElement=null};_setEventListeners(){this._cardImage.addEventListener("click",this._handleCardClick),this._likeBtn.addEventListener("click",(()=>{this._handleLikeClick(this._id)})),this._deleteBtn.addEventListener("click",this._handleDeleteClick)}getView(){return this._cardElement=this._getTemplate(),this._cardTitle=this._cardElement.querySelector(".card__title"),this._cardImage=this._cardElement.querySelector(".card__image"),this._likeBtn=this._cardElement.querySelector(".card__like-button"),this._deleteBtn=this._cardElement.querySelector(".card__delete-button"),this._cardTitle.textContent=this._title,this._cardImage.alt=this._title,this._cardImage.src=this._link,this._setEventListeners(),this._cardElement}},t=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t}_showInputError(e,t){const s=this._formElement.querySelector(`.${e.id}-error`);e.classList.add(this._inputErrorClass),s.textContent=t,s.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`.${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.setAttribute("disabled",!0)):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.removeAttribute("disabled"))}resetValidation(){this._toggleButtonState(),this._inputList.forEach((e=>{this._hideInputError(e)}))}_setEventListeners(){this._inputList=[...this._formElement.querySelectorAll(this._inputSelector)],this._buttonElement=this._formElement.querySelector(this._submitButtonSelector),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._toggleButtonState(),this.checkInputValidity(e)}))}))}enableValidation(){this._setEventListeners()}},s=class{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=t}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}setItem(e){this._container.prepend(e)}},r=class{constructor(e){let{popup:t}=e;this._popup=t}open(){this._popup.classList.add("modal_opened"),document.addEventListener("keydown",this._handleCloseByEsc)}close(){this._popup.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleCloseByEsc)}_handleCloseByEsc=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popup.addEventListener("mousedown",(e=>{(e.target.classList.contains("modal")||e.target.classList.contains("modal__close-button"))&&this.close()}))}},i=class extends r{constructor(e,t){let{popup:s,handleFormSubmit:r}=e;super({popup:s}),this._popupForm=this._popup,this._handleFormSubmit=r,this._inputSelector=t.inputSelector,this._inputList=[...this._popupForm.querySelectorAll(this._inputSelector)]}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setInputValues(e){this._inputList.forEach((t=>{t.value=e[t.name]}))}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),e.target.reset()}))}};const n=document.querySelector(".profile__title"),o=document.querySelector(".profile__description"),a=document.querySelector(".profile__image"),l=document.querySelector(".gallery__cards"),c=document.querySelector("#card-template").content,h=document.getElementById("edit-modal"),d=document.getElementById("new-card-modal"),u=document.getElementById("avatar-edit-modal"),_=document.getElementById("delete-confirmation-modal"),p=document.getElementById("preview-image-modal"),m=p.querySelector(".preview-image"),E=p.querySelector(".image-description"),v=document.querySelector(".profile__edit-button"),k=document.querySelector(".profile__plus-button"),L=document.querySelector(".edit__avatar-button"),b={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__confirm-button",inactiveButtonClass:"modal__confirm-button_inactive",inputErrorClass:"modal__input_type_error",errorClass:"modal__input-error_active"};const g=new class{constructor(e){let{userName:t,userDescription:s,userProfileImage:r}=e;this._userName=t,this._userDescription=s,this._userProfileImage=r}getUserInfo(){const e={};return e.name=this._userName.textContent,e.about=this._userDescription.textContent,e}setUserInfo(e){this._userName.textContent=e.name,this._userDescription.textContent=e.about}setUserProfileImage(e){this._userProfileImage.src=e.avatar,this._userProfileImage.alt=this._userName.textContent}}({userName:n,userDescription:o,userProfileImage:a}),f=new class{constructor(e){this._baseUrl=e.baseUrl,this._headers=e.headers}_checkServerResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getUserInformation(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._checkServerResponse)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._checkServerResponse)}editProfileData(e){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.about})}).then(this._checkServerResponse)}addNewCard(e){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e.title,link:e.link})}).then(this._checkServerResponse)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkServerResponse)}addLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this._checkServerResponse)}deleteLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this._checkServerResponse)}updateProfileImage(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.avatar})}).then(this._checkServerResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"9fbfab1b-69d6-43a9-b085-60d57b074309","Content-Type":"application/json"}}),S=f.getUserInformation().catch((e=>console.error(e))),I=f.getInitialCards().catch((e=>console.error(e)));Promise.all([S,I]).then((e=>{let[t,r]=e;g.setUserInfo(t),g.setUserProfileImage(t),new s({items:r,renderer:y},l).renderItems()}));const C={},y=t=>{const s=(t=>{const s=new e(t,{handleCardClick:()=>w.open(t),handleDeleteClick:()=>{T.open(),T.submitForm((()=>{f.deleteCard(t._id).then((()=>{T.close(),s.removeCard()})).catch((e=>console.error(e)))}))},handleLikeClick:e=>{e._isLiked?f.deleteLike(e).then((e=>{s.setLike(e.isLiked)})).catch((e=>console.error(e))):f.addLike(e).then((e=>{s.setLike(e.isLiked)})).catch((e=>console.error(e)))}},c);return s.getView()})(t);B.setItem(s)},B=new s({items:[],renderer:()=>{}},l),w=new class extends r{constructor(e,t){let{popupImage:s,popupImageText:r}=e;super({popup:t}),this._popup=t,this._popupImage=s,this._popupImageText=r}open(e){super.open(),this._popupImage.src=e.link,this._popupImage.alt=e.name,this._popupImageText.textContent=e.name}}({popupImage:m,popupImageText:E},p),U=new i({popup:h,handleFormSubmit:e=>{f.editProfileData(e).then((e=>{g.setUserInfo(e),U.close()})).catch((e=>console.error(e)))}},b),q=new i({popup:d,handleFormSubmit:e=>{f.addNewCard(e).then((e=>{y(e),q.close()})).catch((e=>console.error(e)))}},b),P=new i({popup:u,handleFormSubmit:e=>{f.updateProfileImage(e).then((e=>{g.setUserProfileImage(e),P.close()})).catch((e=>console.error(e)))}},b),T=new class extends r{constructor(e,t){let{popup:s}=e;super({popup:s}),this._popupForm=this._popup,this._submitButton=t.submitButtonSelector}submitForm(e){this._handleFormSubmit=e}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit()}))}}({popup:_},b);v.addEventListener("click",(()=>{const e=g.getUserInfo();U.setInputValues(e),C["edit-form"].resetValidation(),U.open()})),k.addEventListener("click",(()=>{C["new-card-form"].resetValidation(),q.open()})),L.addEventListener("click",(()=>{C["avatar-edit-form"].resetValidation(),P.open()})),w.setEventListeners(),U.setEventListeners(),q.setEventListeners(),P.setEventListeners(),T.setEventListeners(),(e=>{[...document.querySelectorAll(e.formSelector)].forEach((s=>{const r=new t(e,s),i=s.getAttribute("name");C[i]=r,r.enableValidation()}))})(b)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,